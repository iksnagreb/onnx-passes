# Import additional python modules dynamically before running the pass manager
# with the sequence of ONNX IR passes
imports:
  - onnx_passes.passes.imports.qonnx
  - onnx_passes.passes.inline.qonnx
# Reference data for verification and analysis: Inputs, expected outputs, ...
reference:
  inp: [ inp.npy ]
  out: [ out.npy ]
# Configuration of the model checker pass: Options according to the ONNX IR
# reference: https://onnx.ai/ir-py/api/ir_passes_common.html
model_checker:
  full_check: true
# Supported operators whitelist: Any operator not on this list will cause the
# whitelist analysis pass to fail
whitelist:
  - { null, "finn.custom_op", null } # Allows any FINN operator
# Unsupported operators blacklist: Any operator on this list will cause the
# blacklist analysis pass to fail
blacklist:
  - { null, "", 18 }  # Rejects any default domain operator in version 18
# Configuration of the shape inference pass: Options according to the ONNX IR
# reference: https://onnx.ai/ir-py/api/ir_passes_common.html
shape_inference: { }
# Configuration ONNX Runtime used for model evaluation during verification and
# analysis passes - see the ONNX Runtime API documentation for details:
#   https://onnxruntime.ai/docs/api/python/api_summary.html#inferencesession
onnxruntime:
  # Execution providers for accelerated inference
  providers:
    - - CPUExecutionProvider
      - { }
  # Produce a full execution context dump
  full_context_dump: false
# Configuration of model verification methods
verify:
  # Tolerance-based verification, parameters passed to np.allclose(...)
  tolerance:
    atol: 1.0e-6
  # Metric-based verification
  metrics:
    # Maximum Absolute Error over all outputs
    max_abs_error: [ 0.0, 0.01 ]
# Configuration of logging and verbosity
logging:
  # Enable all passes to print a message when entering/leaving
  verbose: false
  # Name to use for checkpoints - or to disable checkpointing
  checkpoint: false
  # Keeps intermediate models after each pass - path to some logging directory
  keep_intermediates: false
# Keep applying the passes exhaustively until the model stops changing
exhaustive: false
